library(tidyverse)
library(here)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,
messages = FALSE,
warning = FALSE)
sampledata <- readRDS(here::here("raw_data/loanData.rds"))
sampledata1 <- sampledata %>% select(!c("last_name", "first_name"))
sampledata1 <- sampledata1 %>%
sample_n(size = 1000000, replace = FALSE)
sampledata1 <- sampledata1 %>% select(!c("loan_id", "seller", "cscore_b", "cscore_c", "servicer"))
plot(density(sampledata$orig_amt), main = "Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt <- max(sampledata$orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt <- min(sampledata$orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_orig_amt = orig_amt + rnorm(n(),0,2000))%>%
select(!orig_amt)
plot(density(sampledata1$new_orig_amt), main = "New Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt1 <- max(sampledata1$new_orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt1 <- min(sampledata1$new_orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_last_upb =  last_upb + rnorm(n(),0,2000))%>%
select(!last_upb)
sampledata1 <- sampledata1 <- sampledata1 %>%
mutate(new_fcc_cost =  fcc_cost + rnorm(n(),0,2000))%>%
select(!fcc_cost)
sampledata1 <- sampledata1 %>%
mutate(new_pp_cost = pp_cost + rnorm(n(),0,2000))%>%
select(!pp_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ar_cost = ar_cost + rnorm(n(),0,2000))%>%
select(!ar_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ie_cost = ie_cost + rnorm(n(),0,2000))%>%
select(!ie_cost)
sampledata1 <- sampledata1 %>%
mutate(new_tax_cost = tax_cost + rnorm(n(),0,2000))%>%
select(!tax_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ns_procs = ns_procs + rnorm(n(),0,2000))%>%
select(!ns_procs)
sampledata1 <- sampledata1 %>%
mutate(new_ce_procs = ce_procs + rnorm(n(),0,2000))%>%
select(!ce_procs)
sampledata1 <- sampledata1 %>%
mutate(new_rmw_procs = rmw_procs + rnorm(n(),0,2000))%>%
select(!rmw_procs)
sampledata1 <- sampledata1 %>%
mutate(new_o_procs = o_procs + rnorm(n(),0,2000))%>%
select(!o_procs)
sampledata1 <- sampledata1 %>%
mutate(new_f180_upb = f180_upb + rnorm(n(),0,2000))%>%
select(!f180_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fce_upb = fce_upb + rnorm(n(),0,2000))%>%
select(!fce_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f30_upb = f30_upb + rnorm(n(),0,2000))%>%
select(!f30_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f60_upb = f60_upb + rnorm(n(),0,2000))%>%
select(!f60_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f90_upb = f90_upb + rnorm(n(),0,2000))%>%
select(!f90_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fmod_upb = fmod_upb + rnorm(n(),0,2000))%>%
select(!fmod_upb)
avg_income <- sampledata %>%
group_by(state, prop_typ) %>%
summarize(avg_income = mean(income))
avg_income
sampledata2 <- sampledata1 %>%
group_by (state, prop_typ) %>%
mutate(new_zip_3 = sample(zip_3,n(),replace = FALSE))%>%
select(!zip_3)
new_avg_income <- sampledata2 %>%
group_by(state, prop_typ) %>%
summarize(new_avg_income = mean(income))
merged_income <- left_join(avg_income, new_avg_income, by = c("state", "prop_typ"))
merged_income
sampledata2 <- sampledata2 %>%
mutate(cus_agegroup = cut(cus_age, breaks = 3))%>%
select(!cus_age)
ggplot(sampledata2, aes(x = income)) +
geom_histogram(binwidth = 10000, fill = "blue", color = "white") +
labs(title = "Original Distribution of Income", x = "Income", y = "Frequency")
ggplot(data = sampledata2, aes(x = cus_agegroup, y = income)) +
geom_boxplot(fill = "#99CCEE", color = "#333333", alpha = 0.7) +
labs(x = "Age Group", y = "Income", title = "Income Distribution by Age Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
sampledata2 <- sampledata2 %>%
mutate(coded_income = ifelse(income > 950000, 950000, income)) %>%
select(-income) %>%
mutate(coded_income = ifelse(coded_income < 30000, 30000, coded_income))
sampledata2 <- sampledata2 %>%
group_by(cus_agegroup) %>%
mutate(coded_income = ifelse(coded_income < 950000, sample(coded_income,n(),replace = FALSE), coded_income))
ggplot(data = sampledata2, aes(x = coded_income)) +
geom_histogram(binwidth = 10000, fill = "red", color = "white") +
labs(title = "New Distribution of Income", x = "Income", y = "Frequency")
write.csv(sampledata2, here("data", "release-data-Goh-Alexandra.csv"), row.names = FALSE)
library(tidyverse)
library(here)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,
messages = FALSE,
warning = FALSE)
sampledata <- readRDS(here::here("raw_data/loanData.rds"))
sampledata1 <- sampledata %>% select(!c("last_name", "first_name"))
sampledata1 <- sampledata1 %>% select(!c("loan_id", "seller", "cscore_b", "cscore_c", "servicer"))
plot(density(sampledata$orig_amt), main = "Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt <- max(sampledata$orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt <- min(sampledata$orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_orig_amt = orig_amt + rnorm(n(),0,2000))%>%
select(!orig_amt)
plot(density(sampledata1$new_orig_amt), main = "New Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt1 <- max(sampledata1$new_orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt1 <- min(sampledata1$new_orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_last_upb =  last_upb + rnorm(n(),0,2000))%>%
select(!last_upb)
sampledata1 <- sampledata1 <- sampledata1 %>%
mutate(new_fcc_cost =  fcc_cost + rnorm(n(),0,2000))%>%
select(!fcc_cost)
sampledata1 <- sampledata1 %>%
mutate(new_pp_cost = pp_cost + rnorm(n(),0,2000))%>%
select(!pp_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ar_cost = ar_cost + rnorm(n(),0,2000))%>%
select(!ar_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ie_cost = ie_cost + rnorm(n(),0,2000))%>%
select(!ie_cost)
sampledata1 <- sampledata1 %>%
mutate(new_tax_cost = tax_cost + rnorm(n(),0,2000))%>%
select(!tax_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ns_procs = ns_procs + rnorm(n(),0,2000))%>%
select(!ns_procs)
sampledata1 <- sampledata1 %>%
mutate(new_ce_procs = ce_procs + rnorm(n(),0,2000))%>%
select(!ce_procs)
sampledata1 <- sampledata1 %>%
mutate(new_rmw_procs = rmw_procs + rnorm(n(),0,2000))%>%
select(!rmw_procs)
sampledata1 <- sampledata1 %>%
mutate(new_o_procs = o_procs + rnorm(n(),0,2000))%>%
select(!o_procs)
sampledata1 <- sampledata1 %>%
mutate(new_f180_upb = f180_upb + rnorm(n(),0,2000))%>%
select(!f180_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fce_upb = fce_upb + rnorm(n(),0,2000))%>%
select(!fce_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f30_upb = f30_upb + rnorm(n(),0,2000))%>%
select(!f30_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f60_upb = f60_upb + rnorm(n(),0,2000))%>%
select(!f60_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f90_upb = f90_upb + rnorm(n(),0,2000))%>%
select(!f90_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fmod_upb = fmod_upb + rnorm(n(),0,2000))%>%
select(!fmod_upb)
avg_income <- sampledata %>%
group_by(state, prop_typ) %>%
summarize(avg_income = mean(income))
avg_income
sampledata2 <- sampledata1 %>%
group_by (state, prop_typ) %>%
mutate(new_zip_3 = sample(zip_3,n(),replace = FALSE))%>%
select(!zip_3)
new_avg_income <- sampledata2 %>%
group_by(state, prop_typ) %>%
summarize(new_avg_income = mean(income))
merged_income <- left_join(avg_income, new_avg_income, by = c("state", "prop_typ"))
merged_income
sampledata2 <- sampledata2 %>%
mutate(cus_agegroup = cut(cus_age, breaks = 3))%>%
select(!cus_age)
ggplot(sampledata2, aes(x = income)) +
geom_histogram(binwidth = 10000, fill = "blue", color = "white") +
labs(title = "Original Distribution of Income", x = "Income", y = "Frequency")
ggplot(data = sampledata2, aes(x = cus_agegroup, y = income)) +
geom_boxplot(fill = "#99CCEE", color = "#333333", alpha = 0.7) +
labs(x = "Age Group", y = "Income", title = "Income Distribution by Age Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
sampledata2 <- sampledata2 %>%
mutate(coded_income = ifelse(income > 950000, 950000, income)) %>%
select(-income) %>%
mutate(coded_income = ifelse(coded_income < 30000, 30000, coded_income))
sampledata2 <- sampledata2 %>%
group_by(cus_agegroup) %>%
mutate(coded_income = ifelse(coded_income < 950000, sample(coded_income,n(),replace = FALSE), coded_income))
ggplot(data = sampledata2, aes(x = coded_income)) +
geom_histogram(binwidth = 10000, fill = "red", color = "white") +
labs(title = "New Distribution of Income", x = "Income", y = "Frequency")
write.csv(sampledata2, here("data", "release-data-Goh-Alexandra.csv"), row.names = FALSE)
View(sampledata2)
library(tidyverse)
library(here)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,
messages = FALSE,
warning = FALSE)
sampledata <- readRDS(here::here("raw_data/loanData.rds"))
sampledata1 <- sampledata %>% select(!c("last_name", "first_name"))
sampledata1 <- sampledata1 %>% select(!c("loan_id", "seller", "cscore_b", "cscore_c", "servicer"))
plot(density(sampledata$orig_amt), main = "Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt <- max(sampledata$orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt <- min(sampledata$orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_orig_amt = orig_amt + rnorm(n(),0,2000))%>%
select(!orig_amt)
plot(density(sampledata1$new_orig_amt), main = "New Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt1 <- max(sampledata1$new_orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt1 <- min(sampledata1$new_orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_last_upb =  last_upb + rnorm(n(),0,2000))%>%
select(!last_upb)
sampledata1 <- sampledata1 <- sampledata1 %>%
mutate(new_fcc_cost =  fcc_cost + rnorm(n(),0,2000))%>%
select(!fcc_cost)
sampledata1 <- sampledata1 %>%
mutate(new_pp_cost = pp_cost + rnorm(n(),0,2000))%>%
select(!pp_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ar_cost = ar_cost + rnorm(n(),0,2000))%>%
select(!ar_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ie_cost = ie_cost + rnorm(n(),0,2000))%>%
select(!ie_cost)
sampledata1 <- sampledata1 %>%
mutate(new_tax_cost = tax_cost + rnorm(n(),0,2000))%>%
select(!tax_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ns_procs = ns_procs + rnorm(n(),0,2000))%>%
select(!ns_procs)
sampledata1 <- sampledata1 %>%
mutate(new_ce_procs = ce_procs + rnorm(n(),0,2000))%>%
select(!ce_procs)
sampledata1 <- sampledata1 %>%
mutate(new_rmw_procs = rmw_procs + rnorm(n(),0,2000))%>%
select(!rmw_procs)
sampledata1 <- sampledata1 %>%
mutate(new_o_procs = o_procs + rnorm(n(),0,2000))%>%
select(!o_procs)
sampledata1 <- sampledata1 %>%
mutate(new_f180_upb = f180_upb + rnorm(n(),0,2000))%>%
select(!f180_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fce_upb = fce_upb + rnorm(n(),0,2000))%>%
select(!fce_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f30_upb = f30_upb + rnorm(n(),0,2000))%>%
select(!f30_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f60_upb = f60_upb + rnorm(n(),0,2000))%>%
select(!f60_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f90_upb = f90_upb + rnorm(n(),0,2000))%>%
select(!f90_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fmod_upb = fmod_upb + rnorm(n(),0,2000))%>%
select(!fmod_upb)
avg_income <- sampledata %>%
group_by(state, prop_typ) %>%
summarize(avg_income = mean(income))
avg_income
sampledata2 <- sampledata1 %>%
group_by (state, prop_typ) %>%
mutate(new_zip_3 = sample(zip_3,n(),replace = FALSE))%>%
select(!zip_3)
new_avg_income <- sampledata2 %>%
group_by(state, prop_typ) %>%
summarize(new_avg_income = mean(income))
merged_income <- left_join(avg_income, new_avg_income, by = c("state", "prop_typ"))
merged_income
sampledata2 <- sampledata2 %>%
mutate(cus_agegroup = cut(cus_age, breaks = 3))%>%
select(!cus_age)
ggplot(sampledata2, aes(x = income)) +
geom_histogram(binwidth = 10000, fill = "blue", color = "white") +
labs(title = "Original Distribution of Income", x = "Income", y = "Frequency")
ggplot(data = sampledata2, aes(x = cus_agegroup, y = income)) +
geom_boxplot(fill = "#99CCEE", color = "#333333", alpha = 0.7) +
labs(x = "Age Group", y = "Income", title = "Income Distribution by Age Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
sampledata2 <- sampledata2 %>%
mutate(coded_income = ifelse(income > 950000, 950000, income)) %>%
select(-income) %>%
mutate(coded_income = ifelse(coded_income < 30000, 30000, coded_income))
sampledata2 <- sampledata2 %>%
group_by(cus_agegroup) %>%
mutate(coded_income = ifelse(coded_income < 950000, sample(coded_income,n(),replace = FALSE), coded_income))
ggplot(data = sampledata2, aes(x = coded_income)) +
geom_histogram(binwidth = 10000, fill = "red", color = "white") +
labs(title = "New Distribution of Income", x = "Income", y = "Frequency")
write.csv(sampledata2, here("data", "release-data-Goh-Alexandra.csv"), row.names = FALSE)
save(SA1_2021_G43, file=here::here("data/release-data-Goh-Alexandra.rds"))
write_rds(sampledata2, "data/release-data-Goh-Alexandra.rds")
write_rds(sampledata2, "data/release-data-Goh-Alexandra.rds")
saveRDS(sampledata2, "data/release-data-Goh-Alexandra.rds")
save(sampledata2, "data/release-data-Goh-Alexandra.rds")
saveRDS(sampledata2, here::here("data/release-data-Goh-Alexandra.rds"))
library(tidyverse)
library(here)
library(dplyr)
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,
messages = FALSE,
warning = FALSE)
sampledata <- readRDS(here::here("raw_data/loanData.rds"))
sampledata1 <- sampledata %>% select(!c("last_name", "first_name"))
sampledata1 <- sample_n(sampledata1, 1000000)
sampledata1 <- sampledata1 %>% select(!c("loan_id", "seller", "cscore_b", "cscore_c", "servicer"))
plot(density(sampledata$orig_amt), main = "Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt <- max(sampledata$orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt <- min(sampledata$orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_orig_amt = orig_amt + rnorm(n(),0,2000))%>%
select(!orig_amt)
plot(density(sampledata1$new_orig_amt), main = "New Kernel Density Plot of Original UPB", xlab = "Original UPB")
# Find the maximum value of orig_am
max_orig_amt1 <- max(sampledata1$new_orig_amt)
print(max_orig_amt)
# Find the minimum value of orig_am
min_orig_amt1 <- min(sampledata1$new_orig_amt)
print(min_orig_amt)
sampledata1 <- sampledata1 %>%
mutate(new_last_upb =  last_upb + rnorm(n(),0,2000))%>%
select(!last_upb)
sampledata1 <- sampledata1 <- sampledata1 %>%
mutate(new_fcc_cost =  fcc_cost + rnorm(n(),0,2000))%>%
select(!fcc_cost)
sampledata1 <- sampledata1 %>%
mutate(new_pp_cost = pp_cost + rnorm(n(),0,2000))%>%
select(!pp_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ar_cost = ar_cost + rnorm(n(),0,2000))%>%
select(!ar_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ie_cost = ie_cost + rnorm(n(),0,2000))%>%
select(!ie_cost)
sampledata1 <- sampledata1 %>%
mutate(new_tax_cost = tax_cost + rnorm(n(),0,2000))%>%
select(!tax_cost)
sampledata1 <- sampledata1 %>%
mutate(new_ns_procs = ns_procs + rnorm(n(),0,2000))%>%
select(!ns_procs)
sampledata1 <- sampledata1 %>%
mutate(new_ce_procs = ce_procs + rnorm(n(),0,2000))%>%
select(!ce_procs)
sampledata1 <- sampledata1 %>%
mutate(new_rmw_procs = rmw_procs + rnorm(n(),0,2000))%>%
select(!rmw_procs)
sampledata1 <- sampledata1 %>%
mutate(new_o_procs = o_procs + rnorm(n(),0,2000))%>%
select(!o_procs)
sampledata1 <- sampledata1 %>%
mutate(new_f180_upb = f180_upb + rnorm(n(),0,2000))%>%
select(!f180_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fce_upb = fce_upb + rnorm(n(),0,2000))%>%
select(!fce_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f30_upb = f30_upb + rnorm(n(),0,2000))%>%
select(!f30_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f60_upb = f60_upb + rnorm(n(),0,2000))%>%
select(!f60_upb)
sampledata1 <- sampledata1 %>%
mutate(new_f90_upb = f90_upb + rnorm(n(),0,2000))%>%
select(!f90_upb)
sampledata1 <- sampledata1 %>%
mutate(new_fmod_upb = fmod_upb + rnorm(n(),0,2000))%>%
select(!fmod_upb)
avg_income <- sampledata %>%
group_by(state, prop_typ) %>%
summarize(avg_income = mean(income))
avg_income
sampledata2 <- sampledata1 %>%
group_by (state, prop_typ) %>%
mutate(new_zip_3 = sample(zip_3,n(),replace = FALSE))%>%
select(!zip_3)
new_avg_income <- sampledata2 %>%
group_by(state, prop_typ) %>%
summarize(new_avg_income = mean(income))
merged_income <- left_join(avg_income, new_avg_income, by = c("state", "prop_typ"))
merged_income
sampledata2 <- sampledata2 %>%
mutate(cus_agegroup = cut(cus_age, breaks = 3))%>%
select(!cus_age)
ggplot(sampledata2, aes(x = income)) +
geom_histogram(binwidth = 10000, fill = "blue", color = "white") +
labs(title = "Original Distribution of Income", x = "Income", y = "Frequency")
ggplot(data = sampledata2, aes(x = cus_agegroup, y = income)) +
geom_boxplot(fill = "#99CCEE", color = "#333333", alpha = 0.7) +
labs(x = "Age Group", y = "Income", title = "Income Distribution by Age Group") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
sampledata2 <- sampledata2 %>%
mutate(coded_income = ifelse(income > 950000, 950000, income)) %>%
select(-income) %>%
mutate(coded_income = ifelse(coded_income < 30000, 30000, coded_income))
sampledata2 <- sampledata2 %>%
group_by(cus_agegroup) %>%
mutate(coded_income = ifelse(coded_income < 950000, sample(coded_income,n(),replace = FALSE), coded_income))
ggplot(data = sampledata2, aes(x = coded_income)) +
geom_histogram(binwidth = 10000, fill = "red", color = "white") +
labs(title = "New Distribution of Income", x = "Income", y = "Frequency")
saveRDS(sampledata2, here::here("data/release-data-Goh-Alexandra.rds"))
